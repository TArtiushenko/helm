{{- if  (.Values.externalPostgresql.rotation.enabled) }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: postgres-taskarchive-cron
  labels:
    tier: postgres
spec:
  schedule: {{ .Values.externalPostgresql.rotation.schedule | quote }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  startingDeadlineSeconds: 120
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        tier: postgres
    spec:
      template:
        spec:
          containers:
            - image: docker-hub.middleware.biz/public/postgres:9.6.2-alpine
              imagePullPolicy: {{ .Values.global.pullPolicy | default "IfNotPresent" }}
              name: postgres-taskarchive-cron
              command:
                - sh
                - -c
                - |
                  echo  "{{ template "corezoid.postgres.host" . }}:*:*:{{ template "corezoid.postgres.rootname" . }}:$POSTGRES_DBSUPERUSERPWD" > ~/.pgpass; chmod 0600 ~/.pgpass;
                  for i in $(seq 0 $(($SHARD_COUNT-1))); do psql -h {{ template "corezoid.postgres.host" . }} -U {{ template "corezoid.postgres.rootname" . }} -d cp${i} -Atc "TRUNCATE TABLE tasks_archive;"; done;
                  for i in $(seq 0 $(($SHARD_COUNT-1))); do psql -h {{ template "corezoid.postgres.host" . }} -U {{ template "corezoid.postgres.rootname" . }} -d cp${i} -Atc "select count(*) from tasks_archive;"; done;
              securityContext:
                runAsUser: 70
              env:
                - name: SHARD_COUNT
                  value: '{{ .Values.externalPostgresql.shards_count }}'
              envFrom:
                - secretRef:
                    name: {{ template "common.names.fullname" . }}-postgres-root
          restartPolicy: OnFailure
{{- end }}
