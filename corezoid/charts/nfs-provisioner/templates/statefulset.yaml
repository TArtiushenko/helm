{{- if eq .Values.global.storage "nfs" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "nfs-provisioner.fullname" . }}
  labels:
    app: {{ template "nfs-provisioner.name" . }}
    chart: {{ template "nfs-provisioner.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  # TODO: Investigate how/if nfs-provisioner can be scaled out beyond 1 replica
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "nfs-provisioner.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "nfs-provisioner.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "nfs-provisioner.name" . }}
        chart: {{ template "nfs-provisioner.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      # NOTE: This is 10 seconds longer than the default nfs-provisioner --grace-period value of 90sec
      terminationGracePeriodSeconds: 100
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "nfs-provisioner.fullname" . }}{{ else }}{{ .Values.rbac.serviceAccountName | quote }}{{ end }}
      containers:
        - name: nfs-server
          image: "{{ .Values.nfs.image.repository }}:{{ .Values.nfs.image.tag}}"
          imagePullPolicy: {{ .Values.nfs.image.pullPolicy }}
          env:
          - name: NFS_EXPORT_0
            value: "{{ .Values.nfs.path }} *(rw,no_subtree_check,no_root_squash)"
          ports:
            - name: nfs
              containerPort: 2049
              protocol: TCP
            - name: mountd
              containerPort: 20048
              protocol: TCP
            - name: rpcbind-tcp
              containerPort: 111
              protocol: TCP
            - name: rpcbind-udp
              containerPort: 111
              protocol: UDP
          securityContext:
            privileged: true
          volumeMounts:
            - name: {{ .Values.nfs.volumeName }}
              mountPath: {{ .Values.nfs.path }}
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PROVISIONER_NAME
              value: {{ template "nfs-provisioner.provisionerName" . }}
            - name: NFS_SERVER
              # value:
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NFS_PATH
              value: {{ .Values.nfs.path }}
            {{- if eq .Values.leaderElection.enabled false }}
            - name: ENABLE_LEADER_ELECTION
              value: "false"
            {{- end }}
          volumeMounts:
            - name: {{ .Values.nfs.volumeName }}
              mountPath: /persistentvolumes
          resources:
        {{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

      volumes:
        - name: lib-modules
          hostPath: # using hostpath to get modules from the host
            path: /lib/modules
            type: Directory
{{- if not .Values.persistence.enabled }}    
        - name: {{ .Values.nfs.volumeName }}
          emptyDir: {}
{{- end }}

{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.nfs.volumeName }}
      spec:
        accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: {{ .Values.global.storageClassName | quote }}
      {{- end }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
{{- end }}
{{- end }}
