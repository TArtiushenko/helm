global:
    release:
        name: 'gitcall_app'
        helm:
            enabled: true
            chart:
                version: '2.0.1'
                description: 'The gitcall application'
            context: 'mw-devopsdev'
            namespace: 'public'
            release: 'public'
            deploy: ['gitcall_docker_server', 'gitcall_network_policy', 'gitcall_pimp', 'kube_goodies', 'docker-registry', 'gitcall', 'gitcall_amulet']
        require:
            docker-registry: '1.0.1'
            gitcall: '2.0.7'
            gitcall_amulet: '1.0.4'
            gitcall_docker_server: '1.0.3'
            gitcall_migrations: '2.0.6'
            gitcall_network_policy: '1.0.4'
            gitcall_pimp: '1.0.6'
            kube_goodies: '1.0.1'
            postgresql: '1.0.1'
            rabbitmq: '1.0.1'
        repositories:
            docker-registry:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/cz-packages.git'
                    path: 'docker-registry'
            gitcall:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/gitcall.git'
                    path: 'component'
            gitcall_amulet:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/gitcall-amulet.git'
                    path: 'component'
            gitcall_docker_server:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/gitcall-docker-server.git'
            gitcall_migrations:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/gitcall-migrations.git'
                    path: 'component'
            gitcall_network_policy:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/gitcall-network-policy.git'
            gitcall_pimp:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/gitcall-pimp.git'
                    path: 'component'
            kube_goodies:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/cz-packages.git'
                    path: 'kube_goodies'
            postgresql:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/cz-packages.git'
                    path: 'postgresql'
            rabbitmq:
                source: 'git'
                git:
                    repo: 'git@github.com:corezoid/cz-packages.git'
                    path: 'rabbitmq'
    rabbitmq:
        gitcall:
            host: 'rabbit-service.public.svc.cluster.local'
            password: 'passwertws'
            port: 5672
            username: 'app-user'
            vhost: '/gitcall'
        dundergitcall_system:
            host: 'rabbit-service.public.svc.cluster.local'
            password: 'passwertws'
            port: 5672
            username: 'app-user'
            vhost: '/gitcall'
        dundergitcall_task:
            host: 'rabbit-service.public.svc.cluster.local'
            password: 'passwertws'
            port: 5672
            username: 'app-user'
            vhost: '/dundergitcall'
    kube_goodies:
        dockerconfig_secrets: []
        hook_dockerconfig_secrets: []
        secrets: []
    postgresql:
        main:
            host: 'pg-postgresql'
            password: 'ygyegyg8'
            port: 5432
            username: 'postgres'
gitcall_amulet:
    gitcall_features_tests:
        enabled: true
        rabbitmq_gitcall_vhost: '/gitcall'
        rabbitmq_dundergitcall_vhost: '/dundergitcall'
        rabbitmq_host: 'rabbit-service.public.svc.cluster.local'
        rabbitmq_password: 'passwertws'
        rabbitmq_user: 'app-user'
    gitcall_network_policy_tests:
        docker_engine_allow: ['public-docker-registry:5000', 'google.com:443']
        docker_engine_deny: []
        docker_registry_allow: []
        docker_registry_deny: ['google.com:443']
        enabled: false
        gitcall_allow: ['rabbit-service.public.svc.cluster.local:5672', 'pg-postgresql:5432', 'gitcall-docker-engine:2375', 'public-docker-registry:5000', 'pimp-service:8080', 'github.com:443']
        gitcall_deny: []
        pimp_allow: ['10.96.0.1:443']
        pimp_deny: ['rabbit-service.public.svc.cluster.local:5672', 'pg-postgresql:5432', 'google.com:443']
    usercode_network_policy_tests:
        enabled: true
        rabbitmq_gitcall_vhost: '/gitcall'
        rabbitmq_dundergitcall_vhost: '/dundergitcall'
        rabbitmq_host: 'rabbit-service.public.svc.cluster.local'
        rabbitmq_password: 'passwertws'
        rabbitmq_user: 'app-user'
    helm:
        image_pull_policy: 'IfNotPresent'
        image_pull_secrets: []
gitcall_pimp:
    config:
        api:
            auth:
                gitcall: 'SSi6AnRIAXQGhq1h2Q1jotES!efzr$xw'
            server:
                host: '0.0.0.0'
                port: 8080
        gopsagent:
            enabled: true
            host: '127.0.0.1'
            port: 6527
        k8s:
            apply_timeout_ms: 10000
            auth:
                in_cluster: true
            image_pull_secrets: []
            namespace_cache_ms: 86400
            secrets_cache_ms: 86400
        promserver:
            enabled: false
        sentry:
            enabled: false
    helm:
        cluster_role_binding_name: 'public-gitcall-pimp-cluster-role-binding'
        cluster_role_name: 'public-gitcall-pimp-cluster-role'
        image_pull_policy: 'Always'
        image_pull_secrets: ['public-middleware-registry-secret']
        ingress_host: ''
        max_replicas: 1
        min_replicas: 1
        resources:
            limits:
                cpu: '500m'
                memory: '500Mi'
            requests:
                cpu: '500m'
                memory: '500Mi'
        secrets: []
gitcall:
    config:
        amqp:
            connections:
                - host: '${GITCALL_RABBITMQ_HOST}'
                  password: '${GITCALL_RABBITMQ_PASSWORD}'
                  port: '${int:GITCALL_RABBITMQ_PORT}'
                  username: '${GITCALL_RABBITMQ_USERNAME}'
                  vhost: '${GITCALL_RABBITMQ_VHOST}'
            buildservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-buildservice'
            buildarchive_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-buildarchive'
            runservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-runservice'
            deployservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-deployservice'
            getservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 20
                prefetch: 20
                queue: 'gitcall-v2-getservice'
            removeservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-removeservice'
            stopservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-stopservice'
            validateservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-validateservice'
            saveservice_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 10
                prefetch: 10
                queue: 'gitcall-v2-saveservice'
            statusupdate_consumer:
                prefetch: 20
                queue: 'dundergitcall-status-update'
            getpolicy_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 2
                prefetch: 2
                queue: 'gitcall-v2-getpolicy'
            setpolicy_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 2
                prefetch: 2
                queue: 'gitcall-v2-setpolicy'
            removepolicy_consumer:
                exchange: 'gitcall-v2'
                num_consumers: 2
                prefetch: 2
                queue: 'gitcall-v2-setpolicy'
        db:
            dsn: 'postgres://${GITCALL_POSTGRESQL_USERNAME}:${GITCALL_POSTGRESQL_PASSWORD}@${GITCALL_POSTGRESQL_HOST}:${GITCALL_POSTGRESQL_PORT}/gitcall?sslmode=disable&binary_parameters=yes'
        dundergitcall:
            docker_config:
                auths: {}
            docker_daemon:
                host: 'tcp://public-gitcall-docker-server-service:2375'
            global_policy:
                dundergitcall_enabled: true
                dundergitcall_image: 'docker-hub.middleware.biz/public/gitcall/dundergitcall:1.0.1'
                dundergitcall_limit_cpu_milli_cores: 200
                dundergitcall_limit_memory_mb: 100
                dundergitcall_max_replicas: 2
                dundergitcall_min_replicas: 1
                dundergitcall_request_cpu_milli_cores: 100
                dundergitcall_request_memory_mb: 50
                usercode_body_size_limit_bytes: 128000
                usercode_js_runner_image: 'docker-hub.middleware.biz/public/gitcall/js-runner:0.5.1'
                usercode_limit_cpu_milli_cores: 100
                usercode_limit_memory_mb: 50
                usercode_limit_per_owner: 0
                usercode_max_replicas: 10
                usercode_min_replicas: 1
                usercode_php_runner_image: 'docker-hub.middleware.biz/public/gitcall/php-runner:0.4.4'
                usercode_php_runtime_image: 'docker-hub.middleware.biz/public/gitcall/php-runtime:7.3-2'
                usercode_proxy_image: 'docker-hub.middleware.biz/public/gitcall/usercode-proxy:1.0.0'
                usercode_python_runner_image: 'docker-hub.middleware.biz/public/gitcall/python-runner:0.1.3'
                usercode_python_runtime_image: 'docker-hub.middleware.biz/public/gitcall/python:3'
                usercode_request_cpu_milli_cores: 100
                usercode_request_memory_mb: 50
                usercode_scale_cpu_average_utilization: 80
                usercode_scale_prometheus_server: 'http://prometheus-server.monitoring.svc'
            gopsagent:
                enabled: false
                host: '127.0.0.1'
                port: 6527
            prometheus:
                enabled: false
            sentry:
                enabled: false
            status_update_period_sec: 30
            status_update_queue: 'dundergitcall-status-update'
            system_amqp:
                host: '${DUNDERGITCALL_SYSTEM_RABBITMQ_HOST}'
                password: '${DUNDERGITCALL_SYSTEM_RABBITMQ_PASSWORD}'
                port: '${int:DUNDERGITCALL_SYSTEM_RABBITMQ_PORT}'
                username: '${DUNDERGITCALL_SYSTEM_RABBITMQ_USERNAME}'
                vhost: '${DUNDERGITCALL_SYSTEM_RABBITMQ_VHOST}'
            task_amqp:
                host: '${DUNDERGITCALL_TASK_RABBITMQ_HOST}'
                password: '${DUNDERGITCALL_TASK_RABBITMQ_PASSWORD}'
                port: '${int:DUNDERGITCALL_TASK_RABBITMQ_PORT}'
                prefetch: 50
                username: '${DUNDERGITCALL_TASK_RABBITMQ_USERNAME}'
                vhost: '${DUNDERGITCALL_TASK_RABBITMQ_VHOST}'
                workers_num: 50
            tmp_dir: '/tmp'
            usercode:
                discovery_period_ms: 60000
                reconnect_period_ms: 5000
                service_port: 9999
                startup_discovery_period_ms: 100
                startup_period_ms: 300000
                worker_num: 50
            usercode_registry: 'gitcall-registry-k8s-public.devopsdev.corezoid.com'
            usercode_registry_schema: 'https'
        enigma:
            enabled: false
        gopsagent:
            enabled: true
            host: '127.0.0.1'
            port: 6527
        prometheus:
            enabled: false
        sentry:
            enabled: false
        servicespimp:
            access_token: 'SSi6AnRIAXQGhq1h2Q1jotES!efzr$xw'
            uri: 'http://public-gitcall-pimp-service:8080'
        servicestopper:
            check_period_ms: 60000
            maybe_stop_after_idling_sec: 600
            stop_after_maybe_stop_ms: 15000
            worker_pool_size: 10
        status_update_exchange: 'gitcall-v2-status-update'
        statuscleaner:
            outdated_check_period_ms: 20000
            outdated_query_limit: 10000
            outdated_time_ms: 90000
    helm:
        image_pull_policy: 'Always'
        image_pull_secrets: []
        max_replicas: 1
        min_replicas: 1
        resources:
            limits:
                cpu: '500m'
                memory: '500Mi'
            requests:
                cpu: '500m'
                memory: '500Mi'
postgresql:
    main:
        host: 'pg-postgresql'
        password: 'ygyegyg8'
        port: 5432
        username: 'postgres'
kube_goodies:
    dockerconfig_secrets: []
    hook_dockerconfig_secrets: []
    secrets: []
rabbitmq:
    gitcall:
        host: 'rabbit-service.public.svc.cluster.local'
        password: 'passwertws'
        port: 5672
        username: 'app-user'
        vhost: '/gitcall'
    dundergitcall_system:
        host: 'rabbit-service.public.svc.cluster.local'
        password: 'passwertws'
        port: 5672
        username: 'app-user'
        vhost: '/gitcall'
    dundergitcall_task:
        host: 'rabbit-service.public.svc.cluster.local'
        password: 'passwertws'
        port: 5672
        username: 'app-user'
        vhost: '/dundergitcall'
docker-registry:
    image:
        repository: 'registry'
        tag: '2.7.1'
        pullPolicy: 'IfNotPresent'
    ingress:
        enabled: true
        hosts: ['gitcall-registry-k8s-public.devopsdev.corezoid.com']
        path: '/*'
        annotations:
            kubernetes.io/ingress.class: 'alb'
            alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:eu-west-1:305168114386:certificate/5fad3576-220b-4c69-ac85-e56b3fe684bd'
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
            alb.ingress.kubernetes.io/scheme: 'internal'
            alb.ingress.kubernetes.io/success-codes: '302,200'
    service:
        type: 'NodePort'
        nodePort: 32500
    configData:
        storage:
            delete:
                enabled: true
gitcall_docker_server:
    config:
        debug: false
        experimental: false
        insecure_registries: []
        metrics_addr: ''
    helm:
        exporter:
            enabled: true
        image_pull_policy: 'Always'
        max_replicas: 1
        min_replicas: 1
        resources:
            limits:
                cpu: '500m'
                memory: '500Mi'
            requests:
                cpu: '500m'
                memory: '500Mi'
gitcall_network_policy:
    docker_registry:
        ingress:
            type: 'nets'
            nets: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16']
        egress:
            type: 'disabled'
gitcall_migrations:
    config:
        db: 'gitcall'
        dir: ''
        host: 'pg-postgresql'
        migrator_password: 'ygyegyg8'
        migrator_username: 'postgres'
        port: 5432
    helm:
        image_pull_secrets: []
